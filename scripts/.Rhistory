if(!is.installed('XLConnect'))
install.packages('XLConnect')
library('XLConnect')
ebay <- readWorksheetFromFile('eBayAuctions.xls',sheet=1)
class(ebay)
str(ebay)
if(!is.installed('xlsx'))
install.packages('xlsx')
library('xlsx')
write.xlsx(results, file = 'results.xlsx', sheetName = 'Resultados')
ebay <- read.xlsx('eBayAuctions.xls', sheetIndex=1)
class(ebay)
ebay <- read.xlsx('eBayAuctions.xls', sheetIndex=1)
str(ebay)
tail(ebay)
if(!is.installed('RWeka'))
install.packages('RWeka')
library('RWeka')
covertype <- read.arff(covertype.arff)
setwd('..')
getwd()
save.image()
covertype <- read.arff('data/covertype.arff')
class(covertype)
str(covertype)
head(covertype)
if(!is.installed('RCurl'))
install.packages('RCurl')
library('RCurl')
url <- getURL(
  C:\CODIGO\R-Charte\ExploraVisualizaconR\scripts\data
url <- getURL(
'https://raw.githubusercontent.com/fcharte/CursoUNIA14/ master/data/results.csv', ssl.verifypeer = FALSE)
library(datasets)
data(iris)
str(iris)
head(iris)
save.image()
q()
valores <- as.integer(runif(50,1,10))
indices <- as.integer(runif(5,1,50))
valores[indices] <- NA
valores
valores > 5
valores + 10
mean(valores)
is.na(valores)
na.fail(valores)
any(is.na(valores))
na.fail(valores)
str(airquality)
nrow(airquality)
nrow(na.omit(airquality))
nrow(na.omit(airquality))
nrow(airquality[complete.cases(airquality),])
promedio <- mean(valores, na.rm = TRUE)
promedio
valores[is.na(valores)] <- promedio
mean(valores)
save.image()
class(iris) 
typeof(iris)
str(iris)
summary(iris)
mean(iris$Petal.Length)
mean(iris$Sepal.Length)
lapply(iris[,1:4],mean)
mean(subset(iris, Species == 'versicolor', select = Sepal.Length)$Sepal.Length)
if(!is.installed('Hmisc'))
    install.packages('Hmisc')
library('Hmisc')
describe(ebay)
tail(table(ebay$sellerRating, ebay$currency))
table(iris$Sepal.Length, iris$Species)
cortes <- seq(from=4, to=8, by=0.5)
seplen <- cut(iris$Sepal.Length, breaks = cortes)
table(seplen, iris$Species)
bySpecies <- split(iris, iris$Species)
str(bySpecies)
mean(bySpecies$setosa$Sepal.Length)
str(covertype)
subset(covertype, slope > 45 & soil_type == '1', select = c(elevation, slope, class))
subcovertype <- covertype[sample(1:nrow(covertype),
                                     nrow(covertype)*.1),]
str(subcovertype)
valores
rank(valores)
set.seed(4242)
indices <- sample(1:nrow(iris), nTraining)
library(sample)
library('sample')
save.image()
q()
